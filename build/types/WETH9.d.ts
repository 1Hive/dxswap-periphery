/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import { ContractEvent, Callback, TransactionObject, BlockType } from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export class WETH9 extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): WETH9;
  methods: {
    allowance(arg0: string, arg1: string): TransactionObject<string>;

    approve(guy: string, wad: number | string): TransactionObject<boolean>;

    balanceOf(arg0: string): TransactionObject<string>;

    decimals(): TransactionObject<string>;

    deposit(): TransactionObject<void>;

    name(): TransactionObject<string>;

    symbol(): TransactionObject<string>;

    totalSupply(): TransactionObject<string>;

    transfer(dst: string, wad: number | string): TransactionObject<boolean>;

    transferFrom(
      src: string,
      dst: string,
      wad: number | string
    ): TransactionObject<boolean>;

    withdraw(wad: number | string): TransactionObject<void>;
  };
  events: {
    Approval: ContractEvent<{
      src: string;
      guy: string;
      wad: string;
      0: string;
      1: string;
      2: string;
    }>;
    Deposit: ContractEvent<{
      dst: string;
      wad: string;
      0: string;
      1: string;
    }>;
    Transfer: ContractEvent<{
      src: string;
      dst: string;
      wad: string;
      0: string;
      1: string;
      2: string;
    }>;
    Withdrawal: ContractEvent<{
      src: string;
      wad: string;
      0: string;
      1: string;
    }>;
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
